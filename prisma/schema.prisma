generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("PRODUCTION_URL")
}

model User {
  id            Int       @id @default(autoincrement())
  name          String    @db.VarChar(100)
  companyName   String    @db.VarChar(100)
  email         String    @unique @db.VarChar(100)
  passwordHash  String    @db.VarChar(300)
  admin         Boolean   @default(false)
  lastAccess    DateTime  @default(now())
  createdAt     DateTime  @default(now())
  updatedAt     DateTime? @updatedAt
  deleted       Boolean   @default(false)
  deletedAt     DateTime? @updatedAt
  plans         Plan[]
  clients       Client[]
  schedules     Schedule[]
  services      Service[]
}

model Plan {
  id               Int       @id @default(autoincrement())
  userId           Int
  user             User      @relation(fields: [userId], references: [id])
  name             String    @db.VarChar(100)
  description      String    @db.VarChar(100)
  price            Decimal   @db.Decimal(10, 2)
  durationMonths   Int
  createdAt        DateTime  @default(now())
  updatedAt        DateTime? @updatedAt
  deleted          Boolean   @default(false)
  deletedAt        DateTime? @updatedAt
  clients          Client[]
  schedules        Schedule[] 
}

model Client {
  id        Int       @id @default(autoincrement())
  name      String    @db.VarChar(100)
  email     String?   @unique @db.VarChar(100)
  phone     String    @db.VarChar(50)
  userId    Int
  user      User      @relation(fields: [userId], references: [id])
  planId    Int
  plan      Plan      @relation(fields: [planId], references: [id])
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  deleted   Boolean   @default(false)
  deletedAt DateTime? @updatedAt
  schedules Schedule[]
}

model Schedule {
  id            Int       @id @default(autoincrement())
  scheduledDate DateTime  @db.Timestamp(6)
  description   String    @db.VarChar(100)
  userId        Int
  user          User      @relation(fields: [userId], references: [id])
  clientId      Int
  client        Client    @relation(fields: [clientId], references: [id])
  services      Service[] @relation("SchedulesServices")
  planId        Int
  plan          Plan      @relation(fields: [planId], references: [id])  
  createdAt     DateTime  @default(now())
  updatedAt     DateTime? @updatedAt
  deleted       Boolean   @default(false)
  deletedAt     DateTime? @updatedAt
}

model Service {
  id          Int        @id @default(autoincrement())
  userId      Int
  user        User       @relation(fields: [userId], references: [id])
  name        String     @db.VarChar(100)
  description String     @db.VarChar(100)
  price       String
  createdAt   DateTime   @default(now())
  updatedAt   DateTime?  @updatedAt
  deleted     Boolean    @default(false)
  deletedAt   DateTime?  @updatedAt
  schedules   Schedule[] @relation("SchedulesServices")
}